# Generated by Django 3.2 on 2021-04-25 04:19

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(max_length=100)),
                ('birthday', models.DateTimeField(blank=True, null=True)),
                ('address', models.TextField()),
                ('level', models.IntegerField()),
                ('status', models.IntegerField(default=1)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Food',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('raw_name', models.CharField(max_length=100)),
                ('description', models.CharField(default='', max_length=200)),
                ('common_name', models.CharField(blank=True, max_length=100, null=True)),
                ('n_factor', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('pro_factor', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('fat_factor', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('cho_factor', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('servings', models.IntegerField()),
                ('prep', models.CharField(max_length=50, null=True)),
                ('cook', models.CharField(max_length=50, null=True)),
                ('total', models.CharField(max_length=50, null=True)),
                ('note', models.CharField(blank=True, max_length=200, null=True)),
                ('rate', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('description', models.TextField(null=True)),
                ('images', models.ImageField(null=True, upload_to='images')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_recipe', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ShopList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(default=1)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipe_shoplist', to='recipe.recipe')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_shoplist', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('images', models.ImageField(null=True, upload_to='reviews')),
                ('rate', models.IntegerField()),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipe_review', to='recipe.recipe')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_review', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Nutrition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('energy', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('carbs', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('sat_fat', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('polyunsat_fat', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('monounsat_fat', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('sugar', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('chole', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('sodium', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('potas', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('fiber', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nutrition', to='recipe.recipe')),
            ],
        ),
        migrations.CreateModel(
            name='MatchFood',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('food', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='food_match', to='recipe.food')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipe_match', to='recipe.recipe')),
            ],
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingredient', to='recipe.recipe')),
            ],
        ),
        migrations.CreateModel(
            name='FoodWeight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=3, max_digits=6)),
                ('desc', models.CharField(max_length=84)),
                ('value', models.DecimalField(decimal_places=1, max_digits=7)),
                ('food', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weight', to='recipe.food')),
            ],
        ),
        migrations.CreateModel(
            name='FoodNutrition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('desc', models.CharField(max_length=60)),
                ('value', models.DecimalField(decimal_places=3, max_digits=10)),
                ('units', models.CharField(max_length=7)),
                ('tagname', models.CharField(blank=True, max_length=20, null=True)),
                ('food', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nutrition', to='recipe.food')),
            ],
        ),
        migrations.CreateModel(
            name='Direction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='direction', to='recipe.recipe')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category', to='recipe.recipe')),
            ],
        ),
    ]
